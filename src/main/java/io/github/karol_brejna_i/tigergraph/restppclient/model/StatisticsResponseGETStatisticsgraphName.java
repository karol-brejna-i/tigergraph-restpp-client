/*
 * TigerGraph REST++ API
 * Title
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.karol_brejna_i.tigergraph.restppclient.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * StatisticsResponseGETStatisticsgraphName
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-23T12:52:29.063+01:00[Europe/Warsaw]")
public class StatisticsResponseGETStatisticsgraphName {
  @SerializedName("CompletedRequests")
  private BigDecimal completedRequests = null;

  @SerializedName("QPS")
  private BigDecimal QPS = null;

  @SerializedName("TimeoutRequests")
  private BigDecimal timeoutRequests = null;

  @SerializedName("AverageLatency")
  private BigDecimal averageLatency = null;

  @SerializedName("MaxLatency")
  private BigDecimal maxLatency = null;

  @SerializedName("MinLatency")
  private BigDecimal minLatency = null;

  @SerializedName("LatencyPercentile")
  private List<BigDecimal> latencyPercentile = null;

  public StatisticsResponseGETStatisticsgraphName completedRequests(BigDecimal completedRequests) {
    this.completedRequests = completedRequests;
    return this;
  }

   /**
   * Get completedRequests
   * @return completedRequests
  **/
  @Schema(description = "")
  public BigDecimal getCompletedRequests() {
    return completedRequests;
  }

  public void setCompletedRequests(BigDecimal completedRequests) {
    this.completedRequests = completedRequests;
  }

  public StatisticsResponseGETStatisticsgraphName QPS(BigDecimal QPS) {
    this.QPS = QPS;
    return this;
  }

   /**
   * Get QPS
   * @return QPS
  **/
  @Schema(description = "")
  public BigDecimal getQPS() {
    return QPS;
  }

  public void setQPS(BigDecimal QPS) {
    this.QPS = QPS;
  }

  public StatisticsResponseGETStatisticsgraphName timeoutRequests(BigDecimal timeoutRequests) {
    this.timeoutRequests = timeoutRequests;
    return this;
  }

   /**
   * Get timeoutRequests
   * @return timeoutRequests
  **/
  @Schema(description = "")
  public BigDecimal getTimeoutRequests() {
    return timeoutRequests;
  }

  public void setTimeoutRequests(BigDecimal timeoutRequests) {
    this.timeoutRequests = timeoutRequests;
  }

  public StatisticsResponseGETStatisticsgraphName averageLatency(BigDecimal averageLatency) {
    this.averageLatency = averageLatency;
    return this;
  }

   /**
   * Get averageLatency
   * @return averageLatency
  **/
  @Schema(description = "")
  public BigDecimal getAverageLatency() {
    return averageLatency;
  }

  public void setAverageLatency(BigDecimal averageLatency) {
    this.averageLatency = averageLatency;
  }

  public StatisticsResponseGETStatisticsgraphName maxLatency(BigDecimal maxLatency) {
    this.maxLatency = maxLatency;
    return this;
  }

   /**
   * Get maxLatency
   * @return maxLatency
  **/
  @Schema(description = "")
  public BigDecimal getMaxLatency() {
    return maxLatency;
  }

  public void setMaxLatency(BigDecimal maxLatency) {
    this.maxLatency = maxLatency;
  }

  public StatisticsResponseGETStatisticsgraphName minLatency(BigDecimal minLatency) {
    this.minLatency = minLatency;
    return this;
  }

   /**
   * Get minLatency
   * @return minLatency
  **/
  @Schema(description = "")
  public BigDecimal getMinLatency() {
    return minLatency;
  }

  public void setMinLatency(BigDecimal minLatency) {
    this.minLatency = minLatency;
  }

  public StatisticsResponseGETStatisticsgraphName latencyPercentile(List<BigDecimal> latencyPercentile) {
    this.latencyPercentile = latencyPercentile;
    return this;
  }

  public StatisticsResponseGETStatisticsgraphName addLatencyPercentileItem(BigDecimal latencyPercentileItem) {
    if (this.latencyPercentile == null) {
      this.latencyPercentile = new ArrayList<BigDecimal>();
    }
    this.latencyPercentile.add(latencyPercentileItem);
    return this;
  }

   /**
   * Get latencyPercentile
   * @return latencyPercentile
  **/
  @Schema(description = "")
  public List<BigDecimal> getLatencyPercentile() {
    return latencyPercentile;
  }

  public void setLatencyPercentile(List<BigDecimal> latencyPercentile) {
    this.latencyPercentile = latencyPercentile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatisticsResponseGETStatisticsgraphName statisticsResponseGETStatisticsgraphName = (StatisticsResponseGETStatisticsgraphName) o;
    return Objects.equals(this.completedRequests, statisticsResponseGETStatisticsgraphName.completedRequests) &&
        Objects.equals(this.QPS, statisticsResponseGETStatisticsgraphName.QPS) &&
        Objects.equals(this.timeoutRequests, statisticsResponseGETStatisticsgraphName.timeoutRequests) &&
        Objects.equals(this.averageLatency, statisticsResponseGETStatisticsgraphName.averageLatency) &&
        Objects.equals(this.maxLatency, statisticsResponseGETStatisticsgraphName.maxLatency) &&
        Objects.equals(this.minLatency, statisticsResponseGETStatisticsgraphName.minLatency) &&
        Objects.equals(this.latencyPercentile, statisticsResponseGETStatisticsgraphName.latencyPercentile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completedRequests, QPS, timeoutRequests, averageLatency, maxLatency, minLatency, latencyPercentile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatisticsResponseGETStatisticsgraphName {\n");
    
    sb.append("    completedRequests: ").append(toIndentedString(completedRequests)).append("\n");
    sb.append("    QPS: ").append(toIndentedString(QPS)).append("\n");
    sb.append("    timeoutRequests: ").append(toIndentedString(timeoutRequests)).append("\n");
    sb.append("    averageLatency: ").append(toIndentedString(averageLatency)).append("\n");
    sb.append("    maxLatency: ").append(toIndentedString(maxLatency)).append("\n");
    sb.append("    minLatency: ").append(toIndentedString(minLatency)).append("\n");
    sb.append("    latencyPercentile: ").append(toIndentedString(latencyPercentile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
